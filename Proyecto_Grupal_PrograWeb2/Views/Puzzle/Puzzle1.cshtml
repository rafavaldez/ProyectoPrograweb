
@{
    ViewBag.Title = "Puzzle1";
}



<meta name="viewport" content="width=device-width" />
<title>Puzzle - Nivel Facil</title>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.13.2/themes/trontastic/jquery-ui.css">
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.13.2/jquery-ui.min.js"></script>
<link href="~/assets/css/sopa-de-letras.css" rel="stylesheet" />
<style>
    #container {
        width: 870px;
        border: 2px solid black;
        border-radius: 20px;
        margin: 40px auto;
        padding: 10px;
        overflow: hidden; /* Para evitar que los elementos floten fuera del contenedor */
    }

    #pieceContainer {
        width: 410px;
        height: 410px;
        border: 1px solid black;
        float: left;
        text-align: center;
        font-size: 30px;
        line-height: 400px;
        position: relative;
    }

    #puzzleContainer {
        width: 410px;
        height: 410px;
        border: 1px solid black;
        float: left; /* Cambiado de "float: right" a "float: left" */
        margin-left: 10px; /* Espacio entre los contenedores */
    }

    ul {
        list-style-type: none;
        text-align: center;
        margin-top: 20px; /* Espacio entre los contenedores y los botones */
    }

        ul button {
            width: 150px; /* Ancho ajustado para centrar */
            border: 1px solid black;
            font-size: 20px;
            border-radius: 5px;
            padding: 5px;
            margin-top: 10px;
            background-color: orange; /* Color naranja para los botones */
        }

    #btnReset {
        display: none;
    }

    .piece {
        width: 100px;
        height: 100px;
        border: 1px solid black;
        float: left;
        background-image: url(../../assets/img/Guanaco03.jpg);
        background-repeat: no-repeat;
    }
</style>






<main>
    <article>
        <section class="section hero" id="home" aria-label="home" style="background-image: url('~/assets/~/assets/images/hero-bg.jpg')">
            <div id="container">
                <div id="pieceContainer"></div>
                <div id="puzzleContainer"></div>
            </div>
            <ul id="buttons">
                <li><button id="btnStart">Empezar</button></li>
                <li><button id="btnReset">Reiniciar</button></li>
            </ul>
        </section>
    </article>
</main>




<script>
    $(document).ready(function () {
        var piezas = createPieces(true);
        $("#puzzleContainer").html(piezas);
        $("#btnStart").click(function () {
            var piezas = $("#puzzleContainer div");
            piezas.each(function () {
                //Es el cambio de la posición de la pieza de manera aleatoria
                var leftPosition =
                    Math.floor(Math.random() * 290 + 0) + "px";
                var topPosition =
                    Math.floor(Math.random() * 290 + 0) + "px";
                $(this).addClass("draggablePiece").css({
                    position: "absolute",
                    left: leftPosition,
                    top: topPosition
                })
                $("#pieceContainer").append($(this));
            });
            var string_vacio = createPieces(false);
            $("#puzzleContainer").html(string_vacio);
            $(this).hide();
            $("#btnReset").show()
            implementLogic()
        });

        $("#btnReset").click(function () {
            var newPieces = createPieces(true);
            $("#puzzleContainer").html(newPieces);
            $(this).hide();
            $("#btnStart").show();
            $("#pieceContainer").empty();

        });

        function createPieces(withImage) {
            var filas = 4,
                columnas = 4;
            var piezas = "";

            for (var i = 0, top = 0, order = 0; i < filas; i++, top -= 100) {
                for (var j = 0, left = 0; j < columnas; j++, left -= 100, order++) {

                    if (withImage) {
                        piezas += "<div style='background-position:" + left + "px " + top + "px;' class='piece' data-order=" +
                            order + "></div>";

                    } else {
                        piezas += "<div style='background-image:none;' class='piece droppableSpace'></div>";
                    }



                }
            }
            return piezas;
        }

        function checkIfPuzzleSolved() {
            if ($("#puzzleContainer .droppedPiece").length != 16) {
                return false;
            }
            for (var k = 0; k < 16; k++) {
                var item = $("#puzzleContainer .droppedPiece:eq(" + k + ")");
                var order = item.data("order");
                if (k == order) {
                    $("#pieceContainer").text("Ouch! Intenta Otra vez");
                    
                    return false;
                }

            }
            $("pieceContainer").text("WoW! Lograste completar el rompecabezas");
            var nivel = 1; // Supongamos que es el nivel 1
            var puntos = 30; // Puntos fijos
            var juegoid = 1;
            guardarPuntajeEnBD(nivel, puntos, juegoid);


            return true;

        }

        function guardarPuntajeEnBD(nivel, puntos, juegoid) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("GuardarPuntaje", "Puzzle")',
                data: { nivel: nivel, puntos: puntos, juegoid: juegoid },
                success: function (result) {
                    console.log("Puntaje guardado exitosamente.");
                },
                error: function (error) {
                    console.error("Error al guardar el puntaje: " + error.responseText);
                }
            });
        }


        function implementLogic() {
            $(".draggablePiece").draggable({
                revert: "invalid",
                start: function () {
                    if ($(this).hasClass("droppedPiece")) {
                        $(this).removeClass("droppedPiece");
                        $(this).parent().removeClass("piecePresent")
                    }
                }
            });
            $(".droppableSpace").droppable({
                hoverClass: "ui-state-highlight",
                accept: function () {
                    return !$(this).hasClass("piecePresent")

                },
                drop: function (event, ui) {
                    var draggableElement = ui.draggable;
                    var droppedOn = $(this);
                    droppedOn.addClass("piecePresent");
                    $(draggableElement)
                        .addClass("droppedPiece")
                        .css({
                            top: 0,
                            left: 0,
                            position: "relative"
                        }).appendTo(droppedOn);
                    checkIfPuzzleSolved();
                }
            });
        }
    });
</script>



@model List<Proyecto_Grupal_PrograWeb2.Models.score>

@{
    ViewBag.Title = "IndexReporteTotal";
    Layout = "~/Views/Shared2/_Layout.cshtml";

}


<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
<script src="https://code.highcharts.com/modules/export-data.js"></script>
<script src="https://code.highcharts.com/modules/accessibility.js"></script>


<style>
    .highcharts-figure,
    .highcharts-data-table table {
        min-width: 310px;
        max-width: 800px;
        margin: 1em auto;
    }

    #container {
        height: 400px;
    }

    .highcharts-data-table table {
        font-family: Verdana, sans-serif;
        border-collapse: collapse;
        border: 1px solid #ebebeb;
        margin: 10px auto;
        text-align: center;
        width: 100%;
        max-width: 500px;
    }

    .highcharts-data-table caption {
        padding: 1em 0;
        font-size: 1.2em;
        color: #555;
    }

    .highcharts-data-table th {
        font-weight: 600;
        padding: 0.5em;
    }

    .highcharts-data-table td,
    .highcharts-data-table th,
    .highcharts-data-table caption {
        padding: 0.5em;
    }

    .highcharts-data-table thead tr,
    .highcharts-data-table tr:nth-child(even) {
        background: #f8f8f8;
    }

    .highcharts-data-table tr:hover {
        background: #f1f7ff;
    }
</style>
<div class="card">

    <table id="Personalizado" class="table">
        <thead>
            <tr>
                <th style="width:50px;">Puntos</th>
                <th style="width:150px;">NombreJuego</th>
                <th style="width:150px;">Usuario</th>
                <th style="width:200px;">Nivel</th>

            </tr>
        </thead>
        <tbody>

            @foreach (var usuario in Model.GroupBy(m => m.usuario))
            {
                <tr>
                    <td colspan="4"><b>Usuario:</b> @(usuario.Key.nombre) @(usuario.Key.apellido)</td>
                </tr>
                foreach (var score in usuario)
                {
                    <tr>
                        <th>@(score.puntos)</th>
                        <th>@(score.juego.nombre)</th>
                        <th>@(score.usuario.nombre) @(score.usuario.apellido)</th>
                        <th>@(score.nivel)</th>
                    </tr>
                }
            }
        </tbody>
        <tfoot>
            <tr>
                <th style="width:50px;"> </th>
                <th style="width:150px;"> </th>

            </tr>
        </tfoot>
    </table>
    <br />
    <div class="card-body">
        <div id="container" style="min-width: 31px; height: 400px; margin: 0 auto"></div>
    </div>
</div>



@*<script>
var jsonData = [
  @foreach (var jugador in Model.GroupBy(m => m.usuario))
  {
    var totalPuntos = jugador.Sum(m => m.puntos);
    var juegos = jugador.Select(m => new { juego = m.juego.nombre, puntos = m.puntos });

    @Html.Raw("{")
    @Html.Raw($"\"jugadorNombre\": \"{jugador.Key}\",")
    @Html.Raw($"\"totalPuntos\": {totalPuntos},")
    @Html.Raw("\"juegos\": [")

    foreach (var juego in juegos)
    {
      @Html.Raw("{")
      @Html.Raw($"\"juego\": \"{juego.juego}\",")
      @Html.Raw($"\"puntos\": {juego.puntos}")
      @Html.Raw("},")
    }

    @Html.Raw("]")
    @Html.Raw("},")
  }
];


  console.log(jsonData); // Muestra el JSON en la consola para verificar

  Highcharts.chart('container', {
    chart: {
      type: 'bar'
    },
    title: {
      text: 'Puntajes por Usuario',
      align: 'left'
    },
      xAxis: {
          categories: jsonData.map(item => item.jugadorNombre),
          title: {
              text: 'Jugadores'
          }
      },
    yAxis: {
      min: 0,
      title: {
        text: 'Puntos',
        align: 'high'
      }
    },
    tooltip: {
      valueSuffix: ' Puntos'
    },
    plotOptions: {
      bar: {
        dataLabels: {
          enabled: true
        },
        groupPadding: 0.1
      }
    },
    legend: {
      layout: 'vertical',
      align: 'right',
      verticalAlign: 'top',
      x: -40,
      y: 80,
      floating: true,
      borderWidth: 1,
      backgroundColor: Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF',
      shadow: true
    },
    credits: {
      enabled: false
      },
      series: jsonData.map(item => ({
          name: item.jugadorNombre,
          data: item.juegos.map(juego => juego.puntos)
      }))
  });
</script>*@


<script>

    var jsonData = [
  @foreach (var juegoGroup in Model.GroupBy(m => m.juego.nombre))
  {
    var totalPuntos = juegoGroup.Sum(m => m.puntos);
    var niveles = juegoGroup.Select(m => new { nivel = m.nivel, puntos = m.puntos, usuario = m.usuario });

    @Html.Raw("{")
    @Html.Raw($"\"juegoNombre\": \"{juegoGroup.Key}\",")
    @Html.Raw($"\"totalPuntos\": {totalPuntos},")
    @Html.Raw("\"usuarios\": [")

    foreach (var usuario in niveles.GroupBy(m => m.usuario))
    {
      @Html.Raw("{")
      @Html.Raw($"\"usuario\": \"{usuario.Key}\",")
      @Html.Raw($"\"puntos\": {usuario.Sum(m => m.puntos)}")
      @Html.Raw("},")
    }

    @Html.Raw("]")
    @Html.Raw("},")
  }
];


  console.log(jsonData); // Muestra el JSON en la consola para verificar

  Highcharts.chart('container', {
    chart: {
      type: 'bar'
    },
    title: {
      text: 'Puntajes por Usuario',
      align: 'left'
    },
      xAxis: {
          categories: jsonData.map(item => item.usuario),
          title: {
              text: 'Usuarios'
          }
      },
    yAxis: {
      min: 0,
      title: {
        text: 'Puntos',
        align: 'high'
      }
    },
    tooltip: {
      valueSuffix: ' Puntos'
    },
    plotOptions: {
      bar: {
        dataLabels: {
          enabled: true
        },
        groupPadding: 0.1
      }
    },
    legend: {
      layout: 'vertical',
      align: 'right',
      verticalAlign: 'top',
      x: -40,
      y: 80,
      floating: true,
      borderWidth: 1,
      backgroundColor: Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF',
      shadow: true
    },
    credits: {
      enabled: false
      },
      series: jsonData.flatMap(item => item.usuarios.map(usuario => ({
          name: item.juegoNombre,
          data: [usuario.puntos]
      })))
      
  });
</script>


<figure class="highcharts-figure">
    <div id="container"></div>
    <p class="highcharts-description">
        Tu descripción aquí...
    </p>
</figure>











@*<script>
        var jsonData = [
            @foreach (var juegoGroup in Model.GroupBy(m => m.juego.nombre))
            {
                var totalPuntos = juegoGroup.Sum(m => m.puntos);
                var niveles = juegoGroup.Select(m => new { nivel = m.nivel, puntos = m.puntos });

                @Html.Raw("{")
                @Html.Raw($"\"juegoNombre\": \"{juegoGroup.Key}\",")
                @Html.Raw($"\"totalPuntos\": {totalPuntos},")
                @Html.Raw("\"niveles\": [")

                foreach (var nivel in niveles)
                {
                    @Html.Raw("{")
                    @Html.Raw($"\"nivel\": {nivel.nivel},")
                    @Html.Raw($"\"puntos\": {nivel.puntos}")
                    @Html.Raw("},")
                }

                @Html.Raw("]")
                @Html.Raw("},")
            }
        ];

        console.log(jsonData); // Muestra el JSON en la consola para verificar

        Highcharts.chart('container2', {
            chart: {
                type: 'bar'
            },
            title: {
                text: 'Puntajes por Nivel y Juego',
                align: 'left'
            },
            xAxis: {
                categories: jsonData.map(item => item.juegoNombre),
                title: {
                    text: 'Juegos'
                }
            },
            yAxis: {
                min: 0,
                title: {
                    text: 'Puntos',
                    align: 'high'
                }
            },
            tooltip: {
                valueSuffix: ' Puntos'
            },
            plotOptions: {
                bar: {
                    dataLabels: {
                        enabled: true
                    },
                    groupPadding: 0.1
                }
            },
            legend: {
                layout: 'vertical',
                align: 'right',
                verticalAlign: 'top',
                x: -40,
                y: 80,
                floating: true,
                borderWidth: 1,
                backgroundColor: Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF',
                shadow: true
            },
            credits: {
                enabled: false
            },
            series: jsonData.flatMap(item => item.niveles.map(nivel => ({
                name: item.juegoNombre,
                data: [nivel.puntos]
            })))
        });
    </script>*@


<div id="container2"></div>








@model List<Proyecto_Grupal_PrograWeb2.Models.score>
@{
    ViewBag.Title = "reportU";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    #container {
        height: 400px;
    }

    .highcharts-figure,
    .highcharts-data-table table {
        min-width: 310px;
        max-width: 800px;
        margin: 1em auto;
    }

    .highcharts-data-table table {
        font-family: Verdana, sans-serif;
        border-collapse: collapse;
        border: 1px solid #ebebeb;
        margin: 10px auto;
        text-align: center;
        width: 100%;
        max-width: 500px;
    }

    .highcharts-data-table caption {
        padding: 1em 0;
        font-size: 1.2em;
        color: #555;
    }

    .highcharts-data-table th {
        font-weight: 600;
        padding: 0.5em;
    }

    .highcharts-data-table td,
    .highcharts-data-table th,
    .highcharts-data-table caption {
        padding: 0.5em;
    }

    .highcharts-data-table thead tr,
    .highcharts-data-table tr:nth-child(even) {
        background: #f8f8f8;
    }

    .highcharts-data-table tr:hover {
        background: #f1f7ff;
    }
</style>
<h2>reportU</h2>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<p>Nombre del Juego:@ViewBag.JuegoNombre</p>


<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
<script src="https://code.highcharts.com/modules/export-data.js"></script>
<script src="https://code.highcharts.com/modules/accessibility.js"></script>


<figure class="highcharts-figure">
    <div id="container"></div>

</figure>

<script>
    var jsonData = [
        @foreach (var juegoGroup in Model.GroupBy(m => m.juego.nombre))
        {
            var totalPuntos = juegoGroup.Sum(m => m.puntos);
            var niveles = juegoGroup.Select(m => new { nivel = m.nivel, puntos = m.puntos });

            @Html.Raw("{")
            @Html.Raw($"\"juegoNombre\": \"{juegoGroup.Key}\",")
            @Html.Raw($"\"totalPuntos\": {totalPuntos},")
            @Html.Raw("\"niveles\": [")

            foreach (var nivel in niveles)
            {
                @Html.Raw("{")
                @Html.Raw($"\"nivel\": {nivel.nivel},")
                @Html.Raw($"\"puntos\": {nivel.puntos}")
                @Html.Raw("},")
            }

            @Html.Raw("]")
            @Html.Raw("},")
        }
    ];

    console.log(jsonData); // Muestra el JSON en la consola para verificar

    // Filtrar jsonData por el nombre del juego
    var juegoDataFiltrado = jsonData.find(juego => juego.juegoNombre === '@ViewBag.JuegoNombre');

    // Ahora `juegoDataFiltrado` contiene la información del juego seleccionado
    console.log(juegoDataFiltrado);

    Highcharts.chart('container', {
        chart: {
            type: 'scatter'
        },
        title: {
            text: `Resultados del juego ${juegoDataFiltrado.juegoNombre}`
        },
        xAxis: {
            title: {
                text: 'Nivel'
            },
            tickInterval: 1, // Establecer el intervalo de las etiquetas en 1
            startOnTick: true,
            endOnTick: true,
            showLastLabel: true
        },
        yAxis: {
            title: {
                text: 'Puntos'
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            name: `Puntos por Nivel`,
            data: juegoDataFiltrado.niveles.map(nivel => [nivel.nivel, nivel.puntos])
        }]
    });
</script>




